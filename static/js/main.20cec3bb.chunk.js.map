{"version":3,"sources":["components/Introduction.tsx","components/SkillsCard.tsx","components/SkillsAccordion.tsx","components/Skills.tsx","components/ExampleCard.tsx","components/Examples.tsx","components/FooterElement.tsx","components/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Introduction","props","type","className","src","img","height","width","alt","Grid","container","item","md","text","map","xs","useStyles","makeStyles","root","minWidth","backgroundColor","color","display","justifyContent","alignItems","animation","borderRadius","description","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","SkillsCard","classes","Card","CardContent","Typography","variant","component","skills","skill","useClasses","theme","accordion","title","SkillsAccordion","classesAccordion","Accordion","AccordionSummary","id","AccordionDetails","accordions","flexDirection","Skills","frontendSkills","backendSkills","Box","textAlign","window","innerWidth","ExampleCard","useState","active","setActive","onClick","e","a","setTimeout","url","location","Examples","FooterElement","toolTip","setToolTip","handleClickXs","navigator","clipboard","writeText","handleClick","Tooltip","PopperProps","disablePortal","onClose","open","disableFocusListener","disableHoverListener","disableTouchListener","Footer","App","licenseKey","scrollingSpeed","navigation","render","Wrapper","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"sOA4DeA,EAnDM,SAACC,GAClB,MACmB,SAAfA,EAAMC,KACF,sBAAKC,UAAU,iCAAf,UACI,qBAAKA,UAAU,oBACf,qBACIA,UAAU,qBACVC,IAAKH,EAAMI,IACXC,OAAO,OACPC,MAAM,OACNC,IAAI,YAER,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACP,UAAU,eAA1B,SACI,cAACM,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACI,qBAAKT,UAAU,oCAAf,SACKF,EAAMY,KAAKC,KAAI,SAAAD,GAAI,OAChB,8BACKA,GADKA,eAQ9B,sBAAKV,UAAU,eAAf,UACI,qBAAKA,UAAU,qBACf,qBACIA,UAAU,qBACVC,IAAKH,EAAMI,IACXC,OAAO,OACPC,MAAM,OACNC,IAAI,YAER,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACP,UAAU,eAA1B,UACI,cAACM,EAAA,EAAD,CAAME,MAAI,EAACI,GAAI,IACf,cAACN,EAAA,EAAD,CAAME,MAAI,EAACI,GAAI,EAAf,SACI,qBAAKZ,UAAU,oCAAf,SACKF,EAAMY,KAAKC,KAAI,SAAAD,GAAI,OAChB,8BACKA,GADKA,iB,wCC5CpCG,EAAYC,YAAW,CACzBC,KAAM,CACFC,SAAU,IACVZ,MAAO,MACPa,gBAAiB,UACjBC,MAAO,QACPf,OAAQ,OACRgB,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,UAAW,0BACXC,aAAc,QAElBC,YAAa,CACTC,WAAY,eACZC,UAAW,SACXC,WAAY,SACZC,SAAU,OACVC,WAAY,UA+BLC,EAtBI,SAAChC,GAChB,IAAMiC,EAAUlB,IAEhB,OACI,cAACmB,EAAA,EAAD,CAAMhC,UAAW+B,EAAQhB,KAAzB,SACI,cAACkB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAYlC,UAAW+B,EAAQP,YAAaW,QAAQ,KAAKC,UAAU,KAAnE,SAEQtC,EAAMuC,OAAO1B,KAAI,SAAC2B,GAAD,OACb,8BACI,sBAAMtC,UAAU,QAAhB,SACKsC,KAFCA,a,wBCpChCC,EAAazB,aAAW,SAAC0B,GAAD,MAAY,CACtCC,UAAW,CACPxB,gBAAiB,UACjBb,MAAO,MACPc,MAAO,SAEXwB,MAAO,CACHjB,WAAY,eACZC,UAAW,SACXC,WAAY,SACZC,SAAU,UAEdb,KAAM,CACFU,WAAY,eACZC,UAAW,SACXC,WAAY,SACZC,SAAU,YAqCHe,EA5BS,SAAC7C,GACrB,IAAM8C,EAAmBL,IAEzB,OAEI,eAACM,EAAA,EAAD,CAAW7C,UAAW4C,EAAiBH,UAAvC,UACI,cAACK,EAAA,EAAD,CACI,gBAAc,kBACdC,GAAG,iBAFP,SAII,cAACb,EAAA,EAAD,CAAYlC,UAAW4C,EAAiBF,MAAxC,SACK5C,EAAM4C,UAGf,cAACM,EAAA,EAAD,UACI,cAACd,EAAA,EAAD,CAAYlC,UAAW4C,EAAiB7B,KAAxC,SACKjB,EAAMuC,OAAO1B,KAAI,SAAC2B,GAAD,OACd,qCACKA,EACD,qCC1CtBC,EAAazB,aAAW,SAAC0B,GAAD,MAAY,CACtCS,WAAY,CACR9B,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZ6B,cAAe,SACf/C,OAAQ,WA+DDgD,EA1DA,WACX,IAAIC,EAA2B,CAAC,aAAc,aAAc,QAAS,QAAS,kBAAmB,eAC7FC,EAA0B,CAAC,OAAQ,UAAW,OAAQ,cAAe,QACnET,EAAmBL,IAGzB,OACI,sBAAKvC,UAAU,0BAA0B+C,GAAG,SAA5C,UACI,cAACO,EAAA,EAAD,CAAKC,UAAW,SAAUvD,UAAU,OAApC,kDAIIwD,OAAOC,WAAa,IAChB,qCACI,eAACnD,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGG,GAAI,GAAIZ,UAAU,+BAApC,sBAGA,cAACM,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGG,GAAI,GAAIZ,UAAU,+BAApC,wBAKJ,eAACM,EAAA,EAAD,CAAMC,WAAS,EAACP,UAAU,kBAA1B,UACI,cAACM,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGG,GAAI,GAAIZ,UAAU,kBAApC,SACI,cAAC,EAAD,CACI0C,MAAO,WACPL,OAAQe,MAIhB,cAAC9C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGG,GAAI,GAAIZ,UAAU,kBAApC,SACI,cAAC,EAAD,CACI0C,MAAO,UACPL,OAAQgB,YAMxB,sBAAKrD,UAAW4C,EAAiBK,WAAjC,UACI,cAAC,EAAD,CACIP,MAAO,WACPL,OAAQe,IAGZ,cAAC,EAAD,CACIV,MAAO,UACPL,OAAQgB,W,gCCpBrBK,EArCK,SAAC5D,GACjB,MAA4B6D,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAMA,OACI,mCAEQD,EACI,qBACI3D,IAAKH,EAAMI,IACXF,UAAW,sCACXG,OAAO,MACPC,MAAM,MACN0D,QAAS,SAACC,GAAD,OAAOF,GAAU,MAG9B,qBACI5D,IAAKH,EAAMI,IACXF,UAAW,iBACXG,OAAO,MACPC,MAAM,MACN0D,QAAO,uCAAE,WAAMC,GAAN,SAAAC,EAAA,6DACLH,GAAU,GADL,SAECI,YAAW,WACbJ,GAAU,KACX,KAJE,OArBXK,EA0BepE,EAAMqE,SAzBnCX,OAAOW,SAAWD,EAoBO,iCArBZ,IAACA,IAqBW,OAAF,2DCHhBE,EAxBE,WACb,OACI,sBAAKpE,UAAU,4BAAf,UACI,cAACsD,EAAA,EAAD,CAAKC,UAAW,SAAUvD,UAAU,OAApC,wIAGA,eAACM,EAAA,EAAD,CAAMC,WAAS,EAACP,UAAU,oBAA1B,UACI,cAACM,EAAA,EAAD,CAAME,MAAI,EAACI,GAAI,EAAGZ,UAAU,oBAA5B,SACI,cAAC,EAAD,CACIE,IAAK,cACLiE,SAAU,+BAGlB,cAAC7D,EAAA,EAAD,CAAME,MAAI,EAACI,GAAI,EAAGZ,UAAU,oBAA5B,SACI,cAAC,EAAD,CACIE,IAAK,cACLiE,SAAU,yC,QCwEnBE,EAnFO,SAACvE,GACnB,MAA4B6D,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,oBAAS,GAAvC,mBAAOW,EAAP,KAAgBC,EAAhB,KAEMC,EAAa,uCAAG,WAAON,GAAP,SAAAF,EAAA,sEACZS,UAAUC,UAAUC,UAAUT,GADlB,uBAEZK,GAAW,GAFC,uBAGZN,YAAW,WACbM,GAAW,KACZ,MALe,2CAAH,sDASbK,EAAW,uCAAG,WAAOV,GAAP,SAAAF,EAAA,sEACVS,UAAUC,UAAUC,UAAUT,GADpB,uBAEVK,GAAW,GAFD,uBAGVN,YAAW,WACbM,GAAW,KACZ,MALa,2CAAH,sDASjB,OACI,mCAEQf,OAAOC,WAAa,IAChBG,EACI,qCACI,cAACtD,EAAA,EAAD,CAAME,MAAI,EAACI,IAAE,EAACZ,UAAU,8BAAxB,SACI,qBACI8D,QAAS,kBAAMD,GAAU,IACzB5D,IAAKH,EAAMI,IACXF,UAAW,kBACXK,IAAK,gBAGb,cAACC,EAAA,EAAD,CAAME,MAAI,EAACI,IAAE,EAACZ,UAAU,oBAAxB,SACI,sBAAMA,UAAU,mBAAmB8D,QAAS,kBAAMc,EAAY9E,EAAMoE,MAApE,SACKpE,EAAMoE,WAKnB,cAAC5D,EAAA,EAAD,CAAME,MAAI,EAACI,IAAE,EAACZ,UAAU,mCAAxB,SACI,qBACI8D,QAAS,kBAAMD,GAAU,IACzB5D,IAAKH,EAAMI,IACXF,UAAW,kBACXK,IAAK,gBAIjB,mCACI,cAACwE,EAAA,EAAD,CACIC,YAAa,CACTC,eAAe,GAEnBC,QAAS,WACLT,GAAW,IAEfU,KAAMX,EACNY,sBAAoB,EACpBC,sBAAoB,EACpBC,sBAAoB,EACpB1C,MAAM,qEAXV,SAaI,cAACpC,EAAA,EAAD,CAAME,MAAI,EAACI,IAAE,EAACZ,UAAU,mCAAxB,SACI,qBACI8D,QAAS,kBAAMU,EAAc1E,EAAMoE,MACnCjE,IAAKH,EAAMI,IACXF,UAAW,kBACXK,IAAK,uBC7D1BgF,EAfA,WACX,OACI,iCACI,qBAAKrF,UAAU,mBAAf,SACI,eAACM,EAAA,EAAD,CAAMC,WAAS,EAACP,UAAU,cAA1B,UACI,cAAC,EAAD,CAAeE,IAAK,eAAgBgE,IAAK,sCACzC,cAAC,EAAD,CAAehE,IAAK,iBAAkBgE,IAAK,iBAC3C,cAAC,EAAD,CAAehE,IAAK,aAAcgE,IAAK,2BACvC,cAAC,EAAD,CAAehE,IAAK,cAAegE,IAAK,6B,iBCqC7CoB,MAzCf,WACI,OACI,cAAC,IAAD,CACIC,WAAY,gBACZC,eAAgB,IAChBC,YAAY,EACZC,OAAQ,WACJ,OACI,eAAC,IAAcC,QAAf,WACI,qBAAK3F,UAAU,UAAf,SACI,cAAC,EAAD,CAAcD,KAAK,OAAOG,IAAK,iBACjBQ,KAAM,CAAC,yDAAa,qFAA0B,uFAGhE,qBAAKV,UAAU,UAAf,SACI,cAAC,EAAD,CAAcD,KAAK,QAAQG,IAAK,YAAaQ,KAAM,CAAC,qGAAsB,uCAG9E,qBAAKV,UAAU,UAAf,SACI,cAAC,EAAD,CAAcD,KAAK,OAAOG,IAAK,aAAcQ,KAAM,CAAC,mDAAY,mDAAY,0CAGhF,qBAAKV,UAAU,UAAf,SACI,cAAC,EAAD,MAGJ,qBAAKA,UAAU,UAAf,SACI,cAAC,EAAD,MAGJ,qBAAKA,UAAU,UAAf,SACI,cAAC,EAAD,aCzBb4F,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASX,OACP,cAAC,IAAMY,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.20cec3bb.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Grid} from '@material-ui/core'\r\n\r\ninterface Iintroduction {\r\n    type: 'left' | 'right'\r\n    img: string\r\n    text: string[]\r\n}\r\n\r\nconst Introduction = (props: Iintroduction) => {\r\n    return (\r\n        props.type === 'left' ?\r\n            <div className='introduction introduction-main'>\r\n                <div className='background-left'/>\r\n                <img\r\n                    className='introduction-image'\r\n                    src={props.img}\r\n                    height='100%'\r\n                    width='100%'\r\n                    alt='picture'\r\n                />\r\n                <Grid container className='introduction'>\r\n                    <Grid item md={6} >\r\n                        <div className='centered-introduction text-purple'>\r\n                            {props.text.map(text =>\r\n                                <div key={text}>\r\n                                    {text}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </div> :\r\n            <div className='introduction'>\r\n                <div className='background-right'/>\r\n                <img\r\n                    className='introduction-image'\r\n                    src={props.img}\r\n                    height='100%'\r\n                    width='100%'\r\n                    alt='picture'\r\n                />\r\n                <Grid container className='introduction'>\r\n                    <Grid item xs={6}/>\r\n                    <Grid item xs={6}>\r\n                        <div className='centered-introduction text-purple'>\r\n                            {props.text.map(text =>\r\n                                <div key={text}>\r\n                                    {text}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default Introduction;","import React from 'react';\r\nimport {Card, CardContent, makeStyles, Typography} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n        width: '50%',\r\n        backgroundColor: '#240046',\r\n        color: 'white',\r\n        height: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        animation: 'blinkBorder 2s infinite',\r\n        borderRadius: '30px'\r\n    },\r\n    description: {\r\n        fontFamily: 'BM HANNA_TTF',\r\n        fontStyle: 'normal',\r\n        fontWeight: 'normal',\r\n        fontSize: '48px',\r\n        lineHeight: '48px'\r\n    }\r\n});\r\n\r\ninterface ISkills {\r\n    skills: string[],\r\n    title: string\r\n}\r\n\r\nconst SkillsCard = (props: ISkills) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography className={classes.description} variant=\"h5\" component=\"h2\">\r\n                    {\r\n                        props.skills.map((skill) =>\r\n                            <div key={skill}>\r\n                                <span className='skill'>\r\n                                    {skill}\r\n                                </span>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default SkillsCard;","import React from 'react';\r\nimport {Accordion, AccordionDetails, AccordionSummary, makeStyles, Typography} from \"@material-ui/core\";\r\n\r\nconst useClasses = makeStyles((theme) => ({\r\n    accordion: {\r\n        backgroundColor: '#240046',\r\n        width: '80%',\r\n        color: 'white',\r\n    },\r\n    title: {\r\n        fontFamily: 'BM HANNA_TTF',\r\n        fontStyle: 'normal',\r\n        fontWeight: 'normal',\r\n        fontSize: '1.1rem',\r\n    },\r\n    root: {\r\n        fontFamily: 'BM HANNA_TTF',\r\n        fontStyle: 'normal',\r\n        fontWeight: 'normal',\r\n        fontSize: '1rem'\r\n    }\r\n}))\r\n\r\ninterface ISkillsAccordion {\r\n    title: string,\r\n    skills: string[]\r\n}\r\n\r\nconst SkillsAccordion = (props: ISkillsAccordion) => {\r\n    const classesAccordion = useClasses()\r\n\r\n    return (\r\n\r\n        <Accordion className={classesAccordion.accordion}>\r\n            <AccordionSummary\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n            >\r\n                <Typography className={classesAccordion.title}>\r\n                    {props.title}\r\n                </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n                <Typography className={classesAccordion.root}>\r\n                    {props.skills.map((skill) =>\r\n                        <>\r\n                            {skill}\r\n                            <br/>\r\n                        </>\r\n                    )}\r\n                </Typography>\r\n            </AccordionDetails>\r\n        </Accordion>\r\n    );\r\n};\r\n\r\nexport default SkillsAccordion;","import React from 'react';\r\nimport {Box, Grid, makeStyles} from \"@material-ui/core\";\r\nimport SkillsCard from \"./SkillsCard\";\r\nimport SkillsAccordion from \"./SkillsAccordion\";\r\n\r\nconst useClasses = makeStyles((theme) => ({\r\n    accordions: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        height: '80%'\r\n    }\r\n}))\r\n\r\n\r\nconst Skills = () => {\r\n    let frontendSkills: string[] = ['Javascript', 'Typescript', 'React', 'Redux', 'React-Bootstrap', 'Material-UI']\r\n    let backendSkills: string[] = ['Node', 'Express', 'Nest', 'SQL & NoSQL', 'ORMs']\r\n    const classesAccordion = useClasses()\r\n\r\n\r\n    return (\r\n        <div className='max-height-width skills' id='skills'>\r\n            <Box textAlign={'center'} className='pt-5'>\r\n                Скиллы\r\n            </Box>\r\n            {\r\n                window.innerWidth > 480 ?\r\n                    <>\r\n                        <Grid container>\r\n                            <Grid item md={6} xs={12} className='centered-skills skills-title'>\r\n                                Frontend\r\n                            </Grid>\r\n                            <Grid item md={6} xs={12} className='centered-skills skills-title'>\r\n                                Backend\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container className='centered-skills'>\r\n                            <Grid item md={6} xs={12} className='centered-skills'>\r\n                                <SkillsCard\r\n                                    title={'Frontend'}\r\n                                    skills={frontendSkills}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item md={6} xs={12} className='centered-skills'>\r\n                                <SkillsCard\r\n                                    title={'Backend'}\r\n                                    skills={backendSkills}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </> :\r\n\r\n                    <div className={classesAccordion.accordions}>\r\n                        <SkillsAccordion\r\n                            title={'Frontend'}\r\n                            skills={frontendSkills}\r\n                        />\r\n\r\n                        <SkillsAccordion\r\n                            title={'Backend'}\r\n                            skills={backendSkills}\r\n                        />\r\n                    </div>\r\n            }\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Skills;","import React, {useState} from 'react';\r\n\r\ninterface ICard {\r\n    img: string,\r\n    location: any\r\n}\r\n\r\nconst ExampleCard = (props: ICard) => {\r\n    const [active, setActive] = useState(false)\r\n\r\n    const redirect = (url: Location) => {\r\n        window.location = url\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                active ?\r\n                    <img\r\n                        src={props.img}\r\n                        className={'example-image example-image-scaling'}\r\n                        height='60%'\r\n                        width='60%'\r\n                        onClick={(e) => setActive(true)}\r\n                    />\r\n                    :\r\n                    <img\r\n                        src={props.img}\r\n                        className={'example-image '}\r\n                        height='60%'\r\n                        width='60%'\r\n                        onClick={async e => {\r\n                            setActive(true)\r\n                            await setTimeout(() => {\r\n                                setActive(false)\r\n                            }, 600)\r\n                            redirect(props.location)\r\n                        }}\r\n                    />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExampleCard;","import React from 'react';\r\nimport {Box, Grid} from \"@material-ui/core\";\r\nimport ExampleCard from \"./ExampleCard\";\r\n\r\nconst Examples = () => {\r\n    return (\r\n        <div className='max-height-width examples'>\r\n            <Box textAlign={'center'} className='pt-5'>\r\n                Примеры верстки сайтов\r\n            </Box>\r\n            <Grid container className='centered-examples'>\r\n                <Grid item xs={6} className='centered-examples'>\r\n                    <ExampleCard\r\n                        img={'./site1.png'}\r\n                        location={'./Brown_Theme/index.html'}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={6} className='centered-examples'>\r\n                    <ExampleCard\r\n                        img={'./site2.png'}\r\n                        location={'./White_Gradient/index.html'}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Examples;","import React, {useState} from 'react';\r\nimport {Grid, Tooltip} from \"@material-ui/core\";\r\n\r\ninterface IFooterElement {\r\n    img: string,\r\n    url: string\r\n}\r\n\r\n\r\nconst FooterElement = (props: IFooterElement) => {\r\n    const [active, setActive] = useState(false)\r\n    const [toolTip, setToolTip] = useState(true)\r\n\r\n    const handleClickXs = async (url: string) => {\r\n        await navigator.clipboard.writeText(url)\r\n        await setToolTip(true)\r\n        await setTimeout(() => {\r\n            setToolTip(false)\r\n        }, 1500)\r\n\r\n    }\r\n\r\n    const handleClick = async (url: string) => {\r\n        await navigator.clipboard.writeText(url)\r\n        await setToolTip(true)\r\n        await setTimeout(() => {\r\n            setToolTip(false)\r\n        }, 1500)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                window.innerWidth > 480 ?\r\n                    active ?\r\n                        <>\r\n                            <Grid item xs className='footer-grid-items spin-item'>\r\n                                <img\r\n                                    onClick={() => setActive(false)}\r\n                                    src={props.img}\r\n                                    className={'footer-grid-img'}\r\n                                    alt={'footerImg'}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs className='footer-grid-items'>\r\n                                <span className='footer-grid-text' onClick={() => handleClick(props.url)}>\r\n                                    {props.url}\r\n                                </span>\r\n                            </Grid>\r\n                        </>\r\n                        :\r\n                        <Grid item xs className='footer-grid-items anti-spin-item'>\r\n                            <img\r\n                                onClick={() => setActive(true)}\r\n                                src={props.img}\r\n                                className={'footer-grid-img'}\r\n                                alt={'footerImg'}\r\n                            />\r\n                        </Grid>\r\n                    :\r\n                    <>\r\n                        <Tooltip\r\n                            PopperProps={{\r\n                                disablePortal: true,\r\n                            }}\r\n                            onClose={() => {\r\n                                setToolTip(false)\r\n                            }}\r\n                            open={toolTip}\r\n                            disableFocusListener\r\n                            disableHoverListener\r\n                            disableTouchListener\r\n                            title=\"Скопировано\">\r\n\r\n                            <Grid item xs className='footer-grid-items anti-spin-item'>\r\n                                <img\r\n                                    onClick={() => handleClickXs(props.url)}\r\n                                    src={props.img}\r\n                                    className={'footer-grid-img'}\r\n                                    alt={'footerImg'}\r\n                                />\r\n                            </Grid>\r\n\r\n                        </Tooltip>\r\n\r\n                    </>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FooterElement;","import React from 'react';\r\nimport {Grid} from \"@material-ui/core\";\r\nimport FooterElement from \"./FooterElement\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <div className=\"footer-grid-wrap\">\r\n                <Grid container className='footer-grid'>\r\n                    <FooterElement img={'./github.png'} url={'http://www.github.com/happycloudy'}/>\r\n                    <FooterElement img={'./telegram.png'} url={'@Happycloudy'}/>\r\n                    <FooterElement img={'./mail.png'} url={'arion.mikola@gmail.com'}/>\r\n                    <FooterElement img={'./phone.png'} url={'+7-999-913-12-69'}/>\r\n                </Grid>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport Introduction from \"./components/Introduction\";\nimport Skills from \"./components/Skills\";\nimport Examples from \"./components/Examples\";\nimport Footer from \"./components/Footer\";\nimport ReactFullpage from '@fullpage/react-fullpage';\n\nfunction App() {\n    return (\n        <ReactFullpage\n            licenseKey={'YOUR_KEY_HERE'}\n            scrollingSpeed={1000}\n            navigation={true}\n            render={() => {\n                return (\n                    <ReactFullpage.Wrapper>\n                        <div className='section' >\n                            <Introduction type='left' img={'./notebook.jpg'}\n                                          text={['Портфолио', 'Fullstack-разработчика', 'Миколае Ариона']}/>\n                        </div>\n\n                        <div className='section'>\n                            <Introduction type='right' img={'./man.png'} text={['Разработка сайтов ', 'с нуля']}/>\n                        </div>\n\n                        <div className='section'>\n                            <Introduction type='left' img={'./html.jpg'} text={['Анимации', 'скорость', 'всё на ts']}/>\n                        </div>\n\n                        <div className='section'>\n                            <Skills/>\n                        </div>\n\n                        <div className='section'>\n                            <Examples/>\n                        </div>\n\n                        <div className='section'>\n                            <Footer/>\n                        </div>\n                    </ReactFullpage.Wrapper>\n\n                )\n            }}\n        />\n    )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}